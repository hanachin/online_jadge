// Generated by CoffeeScript 1.4.0
/* ------- Module dependencies. ---------------------------
*/

var app, cluster, express, http, new_worker_env, num_cpu, server, worker, workerID;

express = require('express');

cluster = require('cluster');

app = express();

/* ------- Module dependencies. ---------------------------
*/


/* ------- middleware call. -------------------------------
*/


app.configure(function() {
  var log4js, logger;
  app.set('port', 3001);
  log4js = require('crafity-log4js');
  logger = log4js.getLogger('file');
  log4js.configure({
    appenders: [
      {
        'type': 'console'
      }, {
        'type': 'file',
        'filename': "" + __dirname + "/logs/pxp_lab.log",
        'maxLogSize': 1024 * 1024,
        'pattern': '-yyyy-MM-dd',
        'category': 'console'
      }
    ],
    replaceConsole: true
  });
  app.use(log4js.connectLogger(logger, {
    nolog: ['\\css', '\\.js', '\\.gif', '\\.jpg', '\\.png'],
    format: JSON.stringify({
      'method': ':method',
      'request': ':url',
      'status': ':status',
      'user-agent': ':user-agent'
    })
  }));
  app.use(express.methodOverride());
  app.use(express["static"]("" + __dirname + "/public"));
  return console.log("configure opption");
});

/* ------- middleware call. -------------------------------
*/


/* ------- create httpServer.------------------------------
*/


if (cluster.isMaster) {
  num_cpu = require('os').cpus().length;
  workerID = 0;
  while (workerID < num_cpu) {
    new_worker_env = {};
    new_worker_env["WORKER_NAME"] = "worker" + workerID;
    new_worker_env["WORKER_PORT"] = 3001 + workerID;
    new_worker_env["WORKER_STATE"] = false;
    worker = cluster.fork(new_worker_env);
    workerID++;
  }
} else {
  http = require('http');
  server = http.createServer(app);
  server.listen(process.env["WORKER_PORT"], function() {
    var database, database_root, timer_id;
    console.log("Master Server listening on " + process.env["WORKER_PORT"]);
    database_root = "" + __dirname + "/routes/database";
    database = require(database_root)();
    return timer_id = setTimeout(function() {
      var controller_root;
      controller_root = "" + __dirname + "/routes/controller";
      return console.log("" + (require(controller_root)({
        app: app,
        database: database
      })));
    }, 100);
  });
}

/* ------- create httpServer.------------------------------
*/


/* ------- Error. -----------------------------------------
*/


process.on('uncaughtException', function(err) {
  console.log("err >  " + err);
  return console.error("uncaughtException >  " + err.stack);
});

/* ------- Error. -----------------------------------------
*/

