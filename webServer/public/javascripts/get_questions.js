// Generated by CoffeeScript 1.6.2
var HtmlTemplate, createList, createProgress, createQuestion, createState, displayLoading, getQuestion, saveCookie;

HtmlTemplate = (function() {
  var _ac, _table, _wa;

  function HtmlTemplate() {}

  _table = '<table class="table table-bordered" style="padding: 20px; width: 1030px; margin: auto; margin-top: 15px;">\n  <tbody id="list">\n    <tr style="background-color: #E8E8E8;">\n      <td>問題名</td>\n      <td>解答状況</td>\n      <td>解答回数</td>\n    </tr>\n  </tbody>\n</table>';

  _ac = '<td>\n  <img src="images/ac.png" alt="ac" style="height: 30%;">\n  <span style="margin-left: 1em;">正解</span>\n</td>';

  _wa = '<td>\n  <img src="images/wa.png" alt="wa" style="height: 30%;">\n  <span style="margin-left: 1em;">未提出</span>\n</td>';

  HtmlTemplate.getTable = function() {
    return _table;
  };

  HtmlTemplate.getAC = function() {
    return _ac;
  };

  HtmlTemplate.getWA = function() {
    return _wa;
  };

  return HtmlTemplate;

})();

/* ----  main ---------------------------------------
*/


$(function() {
  var c, cookies, parse, _i, _len;

  if (document.cookie !== '') {
    cookies = document.cookie.split(';');
    for (_i = 0, _len = cookies.length; _i < _len; _i++) {
      c = cookies[_i];
      parse = c.split('=');
      cookies[parse[0]] = decodeURIComponent(parse[1]);
    }
    getQuestion(cookies[' gradeNo'], cookies[' lessonNo'], $);
  }
  return $('select').change(function() {
    var gradeNo, lessonNo;

    gradeNo = $('#gradeNo option:selected').val();
    lessonNo = $('#lessonNo option:selected').val();
    return getQuestion(gradeNo, lessonNo, $);
  });
});

/* ---- function -----------------------------------
*/


getQuestion = function(gradeNo, lessonNo, $) {
  if (gradeNo !== 'null' && lessonNo !== 'null') {
    displayLoading();
    return $.ajax({
      url: "/get_questions",
      type: "GET",
      data: {
        gradeNo: gradeNo,
        lessonNo: lessonNo
      },
      dataType: 'text'
    }).done(function(json) {
      var res, table;

      saveCookie(gradeNo, lessonNo);
      res = $.parseJSON(json);
      table = HtmlTemplate.getTable;
      $('#questions').html(table);
      return createList(res);
    }).fail(function() {
      return alert('サーバ通信エラー');
    });
  }
};

displayLoading = function() {
  var canvas;

  canvas = "<div id='loadingErea' style='text-align: center; width: 100%;'></div>";
  $('#questions').html(canvas);
  return $('#loadingIcon').append(loadIcon.canvas);
};

saveCookie = function(gradeNo, lessonNo) {
  document.cookie = "gradeNo=" + gradeNo + ";";
  return document.cookie = "lessonNo=" + lessonNo + ";";
};

createProgress = function(correcters) {
  var bar, progress;

  correcters = correcters;
  progress = parseInt(correcters / 43 * 100, 10);
  return bar = "<td>\n  <div class=\"progress\" style=\"width:80%\">\n    <div class=\"bar\" style=\"color:black; width:" + progress + "%;\"></div>\n  </div>\n  <span>クラスの正答者：" + correcters + "/43 人</span>\n</td>";
};

createQuestion = function(questionNo) {
  var question;

  return question = "<td>\n  <a href=\"/coding?questionNo=" + questionNo + "\">" + questionNo + "</a>\n</td>";
};

createState = function(judge) {
  var state;

  if (state === 'AC') {
    state = HtmlTemplate.getAC();
  } else {
    state = HtmlTemplate.getWA();
  }
  return state;
};

createList = function(json) {
  var content, obj, progress, question, state, _i, _len, _results;

  _results = [];
  for (_i = 0, _len = json.length; _i < _len; _i++) {
    obj = json[_i];
    question = createQuestion(obj.questionNo);
    progress = createProgress(obj.correcters);
    state = createState(obj.state);
    content = "<tr data-href='/coding?questionNo=" + obj.questionNo + "' class='clickable'>" + question + state + progress + "</tr>";
    $('#list').append(content);
    _results.push($('tr[data-href]').addClass('clickable').click(function(e) {
      if (!$(e.target).is('a')) {
        return window.location = $(e.target).closest('tr').data('href');
      }
    }));
  }
  return _results;
};
