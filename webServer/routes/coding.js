// Generated by CoffeeScript 1.6.2
var createExamples, getExamples, getExplanation, getNextpage;

exports.main = function(req, res, dataBase) {
  var async, exampleTable, ip_address, questionNo, questionTable, username;

  async = require('async');
  username = req.session.username;
  questionNo = req.query.questionNo;
  ip_address = req.ip;
  questionTable = dataBase.questionTable;
  exampleTable = dataBase.exampleTable;
  req.questionNo = "";
  req.explanation = "";
  req.examples = "";
  req.argInput_ex = [];
  req.argOutput_ex = [];
  async.series([
    function(callBack) {
      return getExplanation(req, questionNo, questionTable, callBack);
    }, function(callBack) {
      return getExamples(req, questionNo, exampleTable, callBack);
    }, function(callBack) {
      return createExamples(req, callBack);
    }, function(callBack) {
      return getNextpage(req, res, username, callBack);
    }
  ], function(err, result) {
    if (err) {
      throw err;
      res.redirect('/');
    }
    return console.log("coding all done. " + result);
  });
  return console.log("coding ---------- " + ip_address);
};

getExplanation = function(req, questionNo, questionTable, callBack) {
  return questionTable.find({
    where: {
      questionNo: questionNo
    }
  }).success(function(columns) {
    if ((columns != null)) {
      req.questionNo = columns.questionNo;
      req.explanation = columns.explanation;
    }
    return callBack(null, 1);
  }).error(function(err) {
    return console.log("coding Question_table Err >> " + err);
  });
};

getExamples = function(req, questionNo, exampleTable, callBack) {
  return exampleTable.findAll({
    where: {
      questionNo: questionNo
    }
  }).success(function(columns) {
    var column, i, _i, _len;

    if ((columns != null)) {
      for (i = _i = 0, _len = columns.length; _i < _len; i = ++_i) {
        column = columns[i];
        req.argInput_ex[i] = column.input_ex.replace(/[ ]+/g, '');
        req.argOutput_ex[i] = column.output_ex.replace(/[ ]+/g, '');
      }
    }
    return callBack(null, 2);
  }).error(function(err) {
    return console.log("coding Example_table Err >> " + err);
  });
};

createExamples = function(req, callBack) {
  var i, input_ex, line, output_ex, pre_input, pre_output, _i, _ref;

  line = '<td style="width:8%; text-align:center;"> -----&gt; </td>';
  input_ex = req.argInput_ex;
  output_ex = req.argOutput_ex;
  for (i = _i = 0, _ref = input_ex.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    pre_input = "<td style='font-size:20px; width:50%; text-align:center;'><pre style='font-size: 16px; padding: 10px; line-height:25px;'>" + input_ex[i] + "</pre></td>";
    pre_output = "<td style='font-size:20px; width:50%; text-align:center;'><pre style='font-size: 16px; padding: 10px; line-height:25px;'>" + output_ex[i] + "</pre></td>";
    req.examples += "<tr>" + pre_input + " " + line + " " + pre_output + "</tr>";
  }
  req.examples = "<table style='width:80%; margin:auto;'>" + req.examples + "</table>";
  return callBack(null, 3);
};

getNextpage = function(req, res, username, callBack) {
  res.render('coding', {
    username: username,
    questionNo: req.questionNo,
    explanation: req.explanation,
    example: req.examples
  });
  return callBack(null, 4);
};
